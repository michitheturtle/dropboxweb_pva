{"version":3,"file":"folder-list.component.js","sourceRoot":"","sources":["folder-list.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, Input, OnDestroy, provide} from '@angular/core';\nimport {DropboxApiService} from \"../dropbox-api.service\";\nimport {Dropboxfile} from \"../dropboxfile\";\nimport {Response} from \"@angular/http\";\nimport filesaver = require('filesaver');\nimport {FileDownloaderComponent} from \"../file-downloader/file-downloader.component\";\n\n\n@Component({\n  selector: 'app-folder-list',\n  templateUrl: './app/folder-list/folder-list.component.html',\n  styleUrls: ['./app/folder-list/folder-list.component.css'],\n  directives: [FolderListComponent, FileDownloaderComponent]\n})\nexport class FolderListComponent implements OnInit, OnDestroy  {\n\n  @Input() forFolder: string;\n  @Input() loadOnInit: boolean;\n\n  loading: boolean = false;\n  isOpened: boolean = false;\n  folderList: Dropboxfile[];\n  fileList: Dropboxfile[];\n\n  constructor(private service: DropboxApiService) {}\n\n  ngOnInit() {\n\n    if(this.loadOnInit)\n      //this.loaddata();\n      this.toggle();\n  }\n  ngOnDestroy(){\n    this.folderList = null;\n    this.fileList = null;\n  }\n\n  toggle(){\n    this.isOpened = !this.isOpened;\n\n    if(!this.folderList || !this.fileList)\n      this.loaddata();\n  }\n\n  loaddata() {\n    this.folderList = [];\n\n    this.loading = true;\n\n    this.service.getFiles(this.forFolder).subscribe(result => {\n      let list = <Dropboxfile[]>result.json().entries;\n\n      if(!list)\n        return;\n\n      this.fileList = list.filter(x => x.size > 0 ).sort((n1, n2) => {\n        if (n1.name > n2.name) {\n          return 1;\n        }\n\n        if (n1.name < n2.name) {\n          return -1;\n        }\n\n        return 0;\n      });\n\n      this.folderList = list.filter(x => x.size == null ).sort((n1, n2) => {\n        if (n1.name > n2.name) {\n          return 1;\n        }\n\n        if (n1.name < n2.name) {\n          return -1;\n        }\n\n        return 0;\n      });\n\n      this.loading = false;\n    });\n  }\n\n  download(item: Dropboxfile){\n\n    this.service.download(item).subscribe(result => {\n      this.processDownload(item.name, result);\n    })\n  };\n\n  processDownload(name:string, data: Response){\n\n    var blob = new Blob([data.text()], {type: 'charset=utf-8,%EF%BB%BF'});\n\n    filesaver.saveAs(blob, name);\n\n  }\n\n}\n"]}